# limits
limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
limit_conn_zone $binary_remote_addr zone=addr:10m;

# bots
map $http_user_agent $limit_bots {
     default 0;
     ~*(google|bing|yandex|msnbot) 1;
     ~*(AltaVista|Googlebot|Slurp|BlackWidow|Bot|ChinaClaw|Custo|DISCo|Download|Demon|eCatch|EirGrabber|EmailSiphon|EmailWolf|SuperHTTP|Surfbot|WebWhacker) 1;
     ~*(Express|WebPictures|ExtractorPro|EyeNetIE|FlashGet|GetRight|GetWeb!|Go!Zilla|Go-Ahead-Got-It|GrabNet|Grafula|HMView|Go!Zilla|Go-Ahead-Got-It) 1;
     ~*(rafula|HMView|HTTrack|Stripper|Sucker|Indy|InterGET|Ninja|JetCar|Spider|larbin|LeechFTP|Downloader|tool|Navroad|NearSite|NetAnts|tAkeOut|WWWOFFLE) 1;
     ~*(GrabNet|NetSpider|Vampire|NetZIP|Octopus|Offline|PageGrabber|Foto|pavuk|pcBrowser|RealDownload|ReGet|SiteSnagger|SmartDownload|SuperBot|WebSpider) 1;
     ~*(Teleport|VoidEYE|Collector|WebAuto|WebCopier|WebFetch|WebGo|WebLeacher|WebReaper|WebSauger|eXtractor|Quester|WebStripper|WebZIP|Wget|Widow|Zeus) 1;
     ~*(Twengabot|htmlparser|libwww|Python|perl|urllib|scan|Curl|email|PycURL|Pyth|PyQ|WebCollector|WebCopy|webcraw) 1;
}

# load balancing algorithms
upstream api {
  server api_1:5555;
  server api_2:2222;
  server api_3:3333;
  server api_4:4444;
}

server {
  listen 80;

  # ✅ https + TLSv1.3 + http/2
  # listen 443 ssl http2;
	# ssl_certificate /etc/letsencrypt/live/goaway.beauty/fullchain.pem;
	# ssl_certificate_key /etc/letsencrypt/live/goaway.beauty/privkey.pem;
	# ssl_protocols TLSv1.3;

  # ✅ serve build client from FileSystem -> assigned via Docker
  location / {
    root /usr/share/nginx/html;

    # limit scrapping
    limit_req zone=one burst=5;
    limit_conn addr 10;

    # identify bots
    if ($limit_bots = 1) {
      return 403;
    }
  }

  # ✅ serve api - proxying to a LB
  location /api {
    proxy_pass http://api/;
  }

  # ✅ block urls
  location /admin {
    return 403;
  }

  # Client side caching
  # location ~* \. (?:ico|gif|jpe?g|png|htc|xml|otf|ttf|eot|woff|woff2|svg)$ {
  #     expires 1d;
  #     access_log off;
  #     log_not_found off;

  #     # allow caching only for the client
  #     add_header Cache-Control private;

  #     # metadata of assets
  #     open_file_cache max=3000 inactive=120s;
  #     open_file_cache_valid 120s;
  #     open_file_cache_min_uses 4;
  #     open_file_cache_errors on;
  # }
  # location ~*  \.(css|js|html)$ {
  #     expires 12h;
  #     access_log on;
  #     add_header Cache-Control public;
  # }

  # ❌ close :PORT

  # ❌ 404

  # ❌ 500
}